const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://hukfgitwamcwsiyxlhyb.supabase.co'
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imh1a2ZnaXR3YW1jd3NpeXhsaHliIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTQ3MTk3MywiZXhwIjoyMDc1MDQ3OTczfQ.HrL0GpP2AI1WDN6EAeXx2bWUzH_Ajefaj8nMsTJywR8'

const supabase = createClient(supabaseUrl, supabaseKey)

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const { data: sources, error: sourcesError } = await supabase
    .from('sources')
    .select('*')
  
  if (sourcesError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', sourcesError)
  } else {
    console.log('‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', sources?.length || 0)
    sources?.forEach(source => {
      console.log(`  - ${source.name} (${source.id})`)
    })
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
  const { data: documents, error: docsError } = await supabase
    .from('documents')
    .select('id, content, metadata, created_at')
    .limit(5)
  
  if (docsError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', docsError)
  } else {
    console.log(`‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑–µ: ${documents?.length || 0}`)
    documents?.forEach(doc => {
      console.log(`  - ${doc.id}: "${doc.content.substring(0, 50)}..." (${doc.created_at})`)
    })
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const { count, error: countError } = await supabase
    .from('documents')
    .select('*', { count: 'exact', head: true })
  
  if (countError) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', countError)
  } else {
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${count}`)
  }
}

checkDatabase().catch(console.error)